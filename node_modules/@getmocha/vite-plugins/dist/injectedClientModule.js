import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);
export function injectedClientModule(name, env, opts = {}) {
    return {
        // Expose modules for injected client code and constants.
        // See: https://vite.dev/guide/api-plugin#virtual-modules-convention
        resolveId(id) {
            switch (id) {
                case `virtual:${name}-injected`:
                case `virtual:${name}-constants`:
                    return `\0` + id;
            }
        },
        // Inject client behavior automatically into the document.
        transformIndexHtml(html) {
            if (env.NODE_ENV === 'development') {
                return {
                    html,
                    tags: [
                        {
                            tag: 'script',
                            attrs: { type: 'module', src: `/@id/virtual:${name}-injected` },
                            injectTo: opts.injectTo ?? 'body',
                        },
                    ],
                };
            }
            else {
                return {
                    html,
                    tags: [
                        {
                            tag: 'script',
                            attrs: { type: 'module' },
                            injectTo: opts.injectTo ?? 'body',
                            children: injectedCode(),
                        },
                    ],
                };
            }
        },
        // When the module is requested, load the contents of the injected client code or constants.
        // Automatically include the `MochaEnv` object with the necessary environment variables.
        load(id) {
            switch (id) {
                case `\0virtual:${name}-injected`:
                    return injectedCode();
                case `\0virtual:${name}-constants`:
                    return Object.entries(opts.constants ?? {})
                        .map(([key, val]) => `export const ${key} = ${JSON.stringify(val)};`)
                        .join('\n');
            }
        },
    };
    function injectedCode() {
        const filePath = path.resolve(__dirname, `${name}/${name}-injected.js`);
        const contents = fs.readFileSync(filePath, 'utf-8');
        return `
      const MOCHA_ENV = {
        APP_ID: '${env.APP_ID}',
        APP_URL: '${env.APP_URL}',
        SHOW_WATERMARK: '${env.SHOW_WATERMARK}',
        NODE_ENV: '${env.NODE_ENV}',
        PLUGINS: '${env.PLUGINS}',
        DEBUG_LOGS: '${env.DEBUG_LOGS}',
      };

      ${contents}
    `;
    }
}
