import { ErrorPayload, InvalidatePayload, PrunePayload, UpdatePayload } from 'vite';
export type ViteHmrBeforeUpdateEvent = {
    type: 'vite:hmr:beforeUpdate';
    data: UpdatePayload;
};
export type ViteHmrAfterUpdateEvent = {
    type: 'vite:hmr:afterUpdate';
    data: UpdatePayload;
};
export type ViteHmrBeforeFullReloadEvent = {
    type: 'vite:hmr:beforeFullReload';
};
export type ViteHmrBeforePruneEvent = {
    type: 'vite:hmr:beforePrune';
    data: PrunePayload;
};
export type ViteHmrInvalidateEvent = {
    type: 'vite:hmr:invalidate';
    data: InvalidatePayload;
};
export type ViteHmrErrorEvent = {
    type: 'vite:hmr:error';
    data: ErrorPayload;
};
export type ViteHmrWsDisconnectEvent = {
    type: 'vite:hmr:ws:disconnect';
};
export type ViteHmrWsConnectEvent = {
    type: 'vite:hmr:ws:connect';
};
export type VitePluginConsoleEvent = {
    type: 'console';
    method: keyof typeof console;
    args: Array<string>;
};
export type VitePluginErrorEvent = {
    type: 'error';
    stack: string;
};
export type VitePluginUnhandledRejectionEvent = {
    type: 'unhandledrejection';
    reason: string;
};
